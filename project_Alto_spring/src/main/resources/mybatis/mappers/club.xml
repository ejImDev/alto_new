<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.club">
	<resultMap type="clubDTO" id="clubResult">		
		<result property="club_code" column="club_code" />		
		<result property="title" column="title" />
		<result property="cate_m" column="cate_m" />
		<result property="cate_s" column="cate_s" />
		<result property="cate_s_name" column="cate_s_name" />
		<result property="area_code" column="area_code" />
		<result property="area_name" column="area_name" />
		<result property="manager" column="manager" />
		<result property="member_num" column="member_num" />
		<result property="member_max" column="max" />
		<result property="img" column="img" />
		<result property="intro" column="intro" />
		<result property="regidate" column="regidate" />
		<result property="member_out" column="member_out" />
	</resultMap>
	
	<resultMap type="clubListDTO" id="clubListResult">
		<result property="club_code" column="CLUB_CODE" />
		<result property="title" column="TITLE" />
		<result property="cate_m" column="CATE_M" />
		<result property="cate_s" column="CATE_S" />
		<result property="area_name" column="NAME" />
		<result property="member_num" column="MEMBER_NUM" />
		<result property="img" column="IMG" />
	</resultMap>
	
	<resultMap type="joinDTO" id="clubMemberResult">
		<result property="join_code" column="JOIN_CODE" />
		<result property="mem_id" column="MEM_ID" />
		<result property="club_code" column="CLUB_CODE" />
		<result property="manager" column="MANAGER" />
		<result property="bookmark" column="BOOKMARK" />
		<result property="regidate" column="REGIDATE" />
		<result property="img" column="IMG" />
		<result property="name" column="NAME" />
		<result property="img" column="IMG" />
	</resultMap>
	
	<!-- 모임 등록하기 -->
	<insert id="clubOpen" parameterType="clubDTO">
		INSERT INTO ALTO_CLUB (CLUB_CODE, TITLE, CATE_M, CATE_S, AREA_CODE, MANAGER, MEMBER_MAX, INTRO)
		VALUES(#{club_code}, #{title}, #{cate_m}, #{cate_s}, #{area_code}, #{manager}, #{member_max} , #{intro})
	</insert>
	
	<select id="selectNewClubCode" resultType="String">
		<![CDATA[
			SELECT nvl(MAX(club_code),0) + 1 FROM ALTO_CLUB
		]]>
	</select>	
	
	<!-- 모임 정보 가져오기 모임메인(information) -->
	<select id="selectClubInfo" parameterType="String" resultType="clubDTO">
		<![CDATA[
			SELECT A.*, B.NAME cate_s_name, C.NAME area_name
			FROM ALTO_CLUB A, ALTO_HOBBY_SUB B, ALTO_AREA C
			WHERE CLUB_CODE = #{club_code} AND A.CATE_S = B.HOBBY_SUB_CODE AND A.AREA_CODE = C.AREA_CODE
		]]>
	</select>
	
	<select id="selectNewJoinCode" resultType="String">
		<![CDATA[
			SELECT nvl(MAX(JOIN_CODE),0) + 1 FROM ALTO_JOIN
		]]>
	</select>
	
	<!-- 모임 가입하기 -->
	<insert id="clubJoin" parameterType="java.util.Map">
		INSERT INTO ALTO_JOIN (JOIN_CODE, MEM_ID, CLUB_CODE)
		VALUES(#{join_code}, #{mem_id}, #{club_code})
	</insert>
	
	<!-- 모임개설시 모임장 가입처리  -->
	<insert id="clubManagerJoin" parameterType="java.util.Map">		
		INSERT INTO ALTO_JOIN (JOIN_CODE, MEM_ID, CLUB_CODE, MANAGER)
		VALUES(#{join_code}, #{mem_id}, #{club_code}, #{manager})
	</insert>
		
	<!-- 모임 회원수 증가 -->
	<update id="addClubMemberNum" parameterType="String">
		UPDATE ALTO_CLUB
		SET MEMBER_NUM = NVL(MEMBER_NUM, 0) + 1
		WHERE CLUB_CODE = #{club_code}
	</update>
	
	<!-- 모임 회원 목록 가져오기 -->
	<select id="selectClubMemberList" parameterType="String" resultType="joinDTO">
		<![CDATA[
			SELECT A.*, B.IMG img, B.MEM_NAME name
			FROM ALTO_JOIN A, ALTO_MEMBER B
			WHERE CLUB_CODE = ${club_code} AND A.MEM_ID = B.MEM_ID 
			ORDER BY REGIDATE
		]]>
	</select>
	
	<!-- 모임 탈퇴하기 -->
	<insert id="clubOut" parameterType="java.util.Map">
		<![CDATA[
			DELETE FROM ALTO_JOIN
			WHERE MEM_ID = '${mem_id}' AND CLUB_CODE = ${club_code}	
		]]>
	</insert>
	
	<!-- 모임 회원수 감소 -->
	<update id="minClubMemberNum" parameterType="String">
		UPDATE ALTO_CLUB
		SET MEMBER_NUM = NVL(MEMBER_NUM, 0) - 1
		WHERE CLUB_CODE = #{club_code}
	</update>
	
	<!-- 모임 탈퇴수 증가 -->
	<update id="addOutCount" parameterType="String">
		UPDATE ALTO_CLUB
		SET MEMBER_OUT = NVL(MEMBER_OUT, 0) + 1
		WHERE CLUB_CODE = #{club_code}
	</update>
	
	<!-- 모임장 여부 확인 -->
	<select id="chkManager" parameterType="java.util.Map" resultType="String">
		<![CDATA[
			SELECT MANAGER
			FROM ALTO_JOIN
			WHERE MEM_ID = '${mem_id}' AND CLUB_CODE = ${club_code}
		]]>
	</select>
	
	<!-- 가입일이 가장 오래된 회원 찾기 -->
	<select id="nextManager" parameterType="String" resultType="String">
		<![CDATA[
			SELECT MEM_ID
			FROM (
					SELECT * 
					FROM ALTO_JOIN
					WHERE CLUB_CODE = ${club_code} AND manager = 'N'
					ORDER BY REGIDATE ASC  
				)
			WHERE rowNum = 1
		]]>
	</select>
	
	<!-- 모임장 변경 -->
	<update id="changeManagerJoin" parameterType="java.util.Map">
		<![CDATA[
			UPDATE ALTO_JOIN
			SET MANAGER = 'Y'
			WHERE MEM_ID = '${mem_id}' AND CLUB_CODE = ${club_code}
		]]>
	</update>
	
	<update id="changeManagerClub" parameterType="java.util.Map">
		<![CDATA[
			UPDATE ALTO_CLUB
			SET MANAGER = '${mem_id}'
			WHERE CLUB_CODE = ${club_code}
		]]>
	</update>
	
	<!-- 모임 삭제하기 -->
	<delete id="deleteClub" parameterType="String">
		DELETE FROM ALTO_CLUB
		WHERE CLUB_CODE = #{club_code}	
	</delete>
	
	<!-- 모임 취미코드 가져오기 -->
	<select id="selectClubHobbyCode" parameterType="String" resultType="String">
		SELECT CATE_M FROM ALTO_CLUB WHERE CLUB_CODE = #{club_code}
	</select>
	
	<!-- 모임 정보 수정하기 -->
	<insert id="updateClubInfo" parameterType="java.util.Map">
		UPDATE ALTO_CLUB 
		SET AREA_CODE = #{area_code}, CATE_M = #{cate_m}, CATE_S = #{cate_s}, IMG = #{club_img}, INTRO = #{intro}, MEMBER_MAX = #{member_max}
		WHERE CLUB_CODE = ${club_code}
	</insert>
	
	<!-- 관심 모임 목록 -->
	<select id="selectLikeClubList" resultType="clubListDTO">
		SELECT A.CLUB_CODE CLUB_CODE, 
			   B.TITLE title, 
		       B.CATE_M cate_m, 
		       B.CATE_S cate_s, 
		       C.NAME area_name, 
		       B.MEMBER_NUM member_num, 
		       B.IMG img
		FROM ALTO_LIKE A, ALTO_CLUB B, ALTO_AREA C
		WHERE A.CLUB_CODE = B.CLUB_CODE AND B.AREA_CODE = C.AREA_CODE
		AND A.MEM_ID = #{mem_id}
	</select>	
	
	<!-- BEST 모임 목록 -->
	<select id="selectBestClubList" resultType="clubListDTO">
		<![CDATA[
			SELECT A.CLUB_CODE club_code, 
			       A.TITLE title, 
			       A.CATE_M cate_m, 
			       A.CATE_S cate_s, 
			       B.NAME area_name, 
			       A.MEMBER_NUM member_num, 
			       A.IMG img
			FROM (
				SELECT rowNum, A.*
				FROM (
					SELECT *
					FROM ALTO_CLUB
					WHERE TRUNC(MONTHS_BETWEEN(SYSDATE, REGIDATE)) >= 3
					ORDER BY MEMBER_OUT ASC, REGIDATE ASC
				) A
				WHERE rowNum BETWEEN 1 AND 8
			) A, ALTO_AREA B
			WHERE A.AREA_CODE = B.AREA_CODE
		]]>
	</select>
	
	<!-- 새로생긴 모임 목록 -->
	<select id="selectNewClubList" resultType="clubListDTO">
		<![CDATA[
			SELECT A.CLUB_CODE club_code, 
			       A.TITLE title, 
			       A.CATE_M cate_m, 
			       A.CATE_S cates, 
			       B.NAME area_name, 
			       A.MEMBER_NUM member_num, 
			       A.IMG img
			FROM (
				SELECT rowNum, A.*
				FROM (
					SELECT *
					FROM ALTO_CLUB
					ORDER BY REGIDATE DESC
				) A
				WHERE rowNum BETWEEN 1 AND 8
			) A, ALTO_AREA B
			WHERE A.AREA_CODE = B.AREA_CODE
			ORDER BY REGIDATE DESC
		]]>
	</select>
	
	<!-- 인기취미 순위 -->
	<select id="topHobby" resultType="hashmap">
		SELECT CATE_M, name
		FROM (
			SELECT a.hobby_code CATE_M, num, B.name
			FROM (
				SELECT HOBBY_CODE, COUNT(B.HOBBY_CODE) AS num  
				FROM ALTO_CLUB A RIGHT JOIN ALTO_HOBBY B 
				ON A.CATE_M = B.HOBBY_CODE 
				GROUP BY B.HOBBY_CODE 
			) A, alto_hobby B
			WHERE A.HOBBY_CODE = B.hobby_code
			ORDER BY num DESC, a.hobby_code
		)
	</select>
	
	<select id="topHobbyList" parameterType="String" resultType="clubListDTO">
		<![CDATA[
			SELECT A.CLUB_CODE club_code, 
			       A.TITLE title, 
			       A.CATE_M cate_m, 
			       A.CATE_S cate_s, 
			       B.NAME area_name, 
			       A.MEMBER_NUM member_num, 
			       A.IMG img
			FROM (
				SELECT rowNum, A.*
				FROM (
					SELECT *
					FROM ALTO_CLUB
					WHERE CATE_M = #{hobby_code}
					ORDER BY REGIDATE DESC   
				) A
				WHERE rowNum BETWEEN 1 AND 8
			) A, ALTO_AREA B
			WHERE A.AREA_CODE = B.AREA_CODE
		]]>
	</select>
	
	<!-- 사람 많은 모임 -->
	<select id="selectPeoClubList" resultType="clubListDTO">
		<![CDATA[
			SELECT A.CLUB_CODE club_code, 
			       A.TITLE title, 
			       A.CATE_M cate_m, 
			       A.CATE_S cate_s, 
			       B.NAME area_name, 
			       A.MEMBER_NUM member_num, 
			       A.IMG img
			FROM (
				SELECT rowNum, A.*
				FROM (
					SELECT *
					FROM ALTO_CLUB
					ORDER BY MEMBER_NUM DESC
				) A
				WHERE rowNum BETWEEN 1 AND 8
			) A, ALTO_AREA B
			WHERE A.AREA_CODE = B.AREA_CODE
			ORDER BY member_num DESC
		]]>
	</select>
	
	<select id="selectHobClubList" parameterType="String" resultType="clubListDTO">
		SELECT A.CLUB_CODE club_code, 
		       A.TITLE title, 
		       A.CATE_M cate_m, 
		       A.CATE_S cate_s, 
		       B.NAME area_name, 
		       A.MEMBER_NUM member_num, 
		       A.IMG img
		FROM ALTO_CLUB A, ALTO_AREA B
		WHERE A.AREA_CODE = B.AREA_CODE
		AND CATE_M = #{hobby_code}
		ORDER BY MEMBER_OUT ASC, REGIDATE DESC
	</select>
	
	<select id="keywordSearch" parameterType="String" resultMap="clubResult">
		SELECT a.NAME AS area_name, h.NAME AS hobby_name, c.*
		FROM ALTO_CLUB c, ALTO_AREA a, ALTO_HOBBY h
		WHERE a.AREA_CODE = c.AREA_CODE
		AND c.CATE_M = h.HOBBY_CODE
		AND (c.TITLE LIKE '%' || #{keyword} || '%' OR h.NAME LIKE '%' || #{keyword} || '%' OR a.NAME LIKE '%' || #{keyword} || '%')
	</select>
</mapper>